#
# Services
#
apiVersion: v1
kind: Service
metadata:
  name: ${APP_NAME}
  namespace: ${K8S_NAMESPACE}
  labels:
    app: ${APP_NAME}
    team: ${TEAM_NAME}
    component: nginx
spec:
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  selector:
    app: ${APP_NAME}
    component: nginx
---
apiVersion: v1
kind: Service
metadata:
  name: ${APP_NAME}-php
  namespace: ${K8S_NAMESPACE}
  labels:
    app: ${APP_NAME}
    team: ${TEAM_NAME}
    component: php
spec:
  ports:
  - name: php
    port: 9000
    targetPort: php
    protocol: TCP
  selector:
    app: ${APP_NAME}
    component: php
---

#
# Pod Disuption Budget
#
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: ${APP_NAME}-nginx
  namespace: ${K8S_NAMESPACE}
  labels:
    app: ${APP_NAME}
    component: nginx
    team: ${TEAM_NAME}
spec:
  selector:
    matchLabels:
      app: ${APP_NAME}
      component: nginx
  minAvailable: 2
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: ${APP_NAME}-php
  namespace: ${K8S_NAMESPACE}
  labels:
    app: ${APP_NAME}
    component: php
    team: ${TEAM_NAME}
spec:
  selector:
    matchLabels:
      app: ${APP_NAME}
      component: php
  minAvailable: 2
---

#
# Horizontal Pod Autoscaler
#
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: ${APP_NAME}-nginx
  namespace: ${K8S_NAMESPACE}
  labels:
    app: ${APP_NAME}
    component: nginx
    team: ${TEAM_NAME}
spec:
  scaleTargetRef:
    kind: Deployment
    name: ${APP_NAME}-nginx
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: ${APP_NAME}-php
  namespace: ${K8S_NAMESPACE}
  labels:
    app: ${APP_NAME}
    component: php
    team: ${TEAM_NAME}
spec:
  scaleTargetRef:
    kind: Deployment
    name: ${APP_NAME}-php
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
---

#
# Secrets
#
apiVersion: v1
kind: Secret
metadata:
  name: ${APP_NAME}
  namespace: ${K8S_NAMESPACE}
  labels:
    app: ${APP_NAME}
    team: ${TEAM_NAME}
type: Opaque
data:
  app.yml: ${APP_CONFIG}
---

#
# Deployments
#
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: ${APP_NAME}-nginx
  namespace: ${K8S_NAMESPACE}
  labels:
    app: ${APP_NAME}
    component: nginx
    team: ${TEAM_NAME}
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 15%
      maxUnavailable: 0
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: ${APP_NAME}
      component: nginx
  template:
    metadata:
      labels:
        app: ${APP_NAME}
        component: nginx
        team: ${TEAM_NAME}
        version: ${TAG}
    spec:
      imagePullSecrets:
        - name: ecr
      containers:
        - name: ${APP_NAME}-nginx
          image: ${REGISTRY}/flight/invia/service/amadeus/nginx:${TAG}
          ports:
            - name: http
              containerPort: 80
          resources:
            limits:
              cpu: 100m
              memory: 48Mi
            requests:
              cpu: 10m
              memory: 24Mi
          livenessProbe:
            httpGet:
              path: /-/liveness
              port: http
            initialDelaySeconds: 15
          readinessProbe:
            httpGet:
              path: /-/readiness
              port: http
            initialDelaySeconds: 15
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: ${APP_NAME}-php
  namespace: ${K8S_NAMESPACE}
  labels:
    app: ${APP_NAME}
    component: php
    team: ${TEAM_NAME}
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 15%
      maxUnavailable: 0
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: ${APP_NAME}
      component: php
  template:
    metadata:
      labels:
        app: ${APP_NAME}
        component: php
        team: ${TEAM_NAME}
        version: ${TAG}
    spec:
      imagePullSecrets:
        - name: ecr
      hostAliases:
      containers:
        - name: ${APP_NAME}-php
          image: ${REGISTRY}/flight/invia/service/amadeus/app:${TAG}
          ports:
            - name: php
              containerPort: 9000
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 192Mi
          livenessProbe:
            tcpSocket:
              port: 9000
            initialDelaySeconds: 15
          readinessProbe:
            exec:
              command:
              - /var/www/scripts/health/readiness.sh
            initialDelaySeconds: 15
          volumeMounts:
            - mountPath: /var/www/config
              name: app-config
      volumes:
        - name: app-config
          secret:
            secretName: ${APP_NAME}
